//-----------------------------------------------------------------------------
//	TIER0.VPC
//
//	Project Script
//-----------------------------------------------------------------------------

$Macro SRCDIR		".."
$Macro OUTBINDIR	"$SRCDIR\..\game\bin"
$Macro NOSCHEMACOMPILER "1"
$Conditional VTUNE_ENABLED 0

$Include "$SRCDIR\vpc_scripts\source_dll_base.vpc"

//-----------------------------------------------------------------------------
// VTune defines
$Macro VTUNE_DIR		"$SRCDIR\thirdparty\vtune"
$Macro VTUNE_INCLUDE	"$VTUNE_DIR\include"
$Macro VTUNE_LIB		"$VTUNE_DIR\lib32\libittnotify.lib"
//-----------------------------------------------------------------------------

$Configuration
{
	$Compiler
	{
		$PreprocessorDefinitions		"$BASE;TIER0_DLL_EXPORT;CROSS_PLATFORM_VERSION=1;THREAD_MUTEX_TRACING_ENABLED"[$WINDOWS]
		$PreprocessorDefinitions		"$BASE;TIER0_DLL_EXPORT;CROSS_PLATFORM_VERSION=1;POSIX" [$POSIX]
		$PreprocessorDefinitions		"$BASE;TIER0_FPO_DISABLED"				[$NOFPO]		
	}
	
	$Compiler [$WINDOWS]
	{
		$AdditionalIncludeDirectories	"$BASE;$VTUNE_INCLUDE"	[$VTUNE_ENABLED]
	}
	$Linker [$WINDOWS]
	{
		$AdditionalDependencies			"$BASE;$VTUNE_LIB" [$VTUNE_ENABLED]
	}
	
	$Linker
	{
		$AdditionalDependencies			"$BASE ws2_32.lib"							[$WINDOWS]
	}

}

$Project
{
	$Folder	"Link Libraries"
	{
		-$ImpLib "tier0"
		-$Lib	 "tier1"
		-$implib "vstdlib"
		-$Lib	 "interfaces"
	}

	$Folder	"Source Files" [$WINDOWS||$POSIX]
	{
		-$File	"$SRCDIR\public\tier0\memoverride.cpp"
	}
}

$Project "tier0"
{
		$Folder	"Source Files"
	{
		$File	"../unitlib/unitlib.cpp"
		$File	"assert_dialog.cpp"
		$File	"assert_dialog.rc"		[$WIN32||$WIN64]
		$File	"commandline.cpp"
		$File	"cpu.cpp"
		$File	"cpumonitoring.cpp"
		$File   "cputopology.cpp"
		$File	"cpu_posix.cpp"			[$POSIX]
		$File	"dbg.cpp"
		$File	"etwprof.cpp"			[$WINDOWS]
		$File	"fasttimer.cpp"
		$File	"logging.cpp"
		$File	"mem.cpp"
		$File	"mem_helpers.cpp"
		$File	"memdbg.cpp"
		$File	"memprocessheap.cpp"	[$WINDOWS]
		$File	"memvirt.cpp"
		$File	"memstd.cpp"
		$File	"memvalidate.cpp"
		$File	"dynfunction.cpp"
		$File	"minidump.cpp"
		$File	"tier0_strtools.cpp"			
		$File	"miniprofiler.cpp"			
		$File	"perfstats.cpp"
		$File	"platform.cpp" [$WINDOWS]
		$File   "platform_posix.cpp" [$POSIX]
		$File   "platform_independent.cpp"
		$File	"platwindow.cpp"
		$File	"pme.cpp"			[$WIN32||$WIN64]
		$File	"pme_posix.cpp"		[$POSIX]
		$File	"PMELib.cpp"		[$WIN32||$WIN64]
		$File	"progressbar.cpp"
		$File	"security.cpp"
		$File	"stackstats.cpp"
		$File	"stacktools.cpp"
		$File	"systeminformation.cpp"
		$File	"threadtools.cpp"
		$File	"tslist.cpp"
		$File	"vatoms.cpp"
		$File	"vprof.cpp"
		$File	"vtuneinterface.cpp"
		$File	"win32consoleio.cpp"

		$Folder	"dlmalloc"
		{
			$File	"dlmalloc\malloc.cpp"	[$WINDOWS]
			$File	"dlmalloc\malloc-2.8.3.h"
		}

		$File	"../tier1/pathmatch.cpp" [$LINUXALL]

	}

	$folder	"Header Files"
	{
		$File	"$SRCDIR\public\tier0\basetypes.h"
		$File	"$SRCDIR\public\tier0\commonmacros.h"
		$File	"$SRCDIR\public\tier0\cache_hints.h"
		$File	"$SRCDIR\public\tier0\cpumonitoring.h"
		$File	"cputopology.h"
		$File	"$SRCDIR\public\tier0\dbg.h"
		$File	"$SRCDIR\public\tier0\dbgflag.h"
		$File	"$SRCDIR\public\tier0\etwprof.h"
		$File	"$SRCDIR\public\tier0\EventMasks.h"
		$File	"$SRCDIR\public\tier0\EventModes.h"
		$File	"$SRCDIR\public\tier0\fasttimer.h"
		$File	"$SRCDIR\public\tier0\ia32detect.h"
		$File	"$SRCDIR\public\tier0\icommandline.h"
		$File	"$SRCDIR\public\tier0\IOCTLCodes.h"
		$File	"$SRCDIR\public\tier0\K8PerformanceCounters.h"
		$File	"$SRCDIR\public\tier0\l2cache.h"
		$File	"$SRCDIR\public\tier0\logging.h"
		$File	"$SRCDIR\public\tier0\mem.h"
		$File	"mem_helpers.h"
		$File	"mem_impl_type.h"
		$File	"$SRCDIR\public\tier0\memalloc.h"
		$File	"$SRCDIR\public\tier0\memdbgoff.h"
		$File	"$SRCDIR\public\tier0\memdbgon.h"
		$File	"memstd.h"
		$File	"$SRCDIR\public\tier0\memvirt.h"
		$File	"$SRCDIR\public\tier0\minidump.h"
		$File	"$SRCDIR\public\tier0\miniprofiler.h"
		$File	"$SRCDIR\public\tier0\microprofiler.h"
		$File	"$SRCDIR\public\tier0\P4PerformanceCounters.h"
		$File	"$SRCDIR\public\tier0\P5P6PerformanceCounters.h"
		$File	"pch_tier0.h"
		$File	"tier0_strtools.h"
		$File	"$SRCDIR\public\tier0\perfstats.h"
		$File	"$SRCDIR\public\tier0\platform.h"
		$File	"$SRCDIR\public\tier0\platwindow.h"
		$File	"$SRCDIR\public\tier0\PMELib.h"
		$File	"$SRCDIR\public\tier0\progressbar.h"
		$File	"$SRCDIR\public\tier0\protected_things.h"
		$File	"resource.h"
		$File	"$SRCDIR\public\tier0\stackstats.h"
		$File	"$SRCDIR\public\tier0\stacktools.h"
		$File	"$SRCDIR\public\tier0\systeminformation.h"
		$File	"$SRCDIR\public\tier0\threadtools.h"
		$File	"$SRCDIR\public\tier0\threadtools.inl"
		$File	"$SRCDIR\public\tier0\tslist.h"
		$File	"$SRCDIR\public\tier0\validator.h"
		$File	"$SRCDIR\public\tier0\valobject.h"
		$File	"$SRCDIR\public\tier0\valve_off.h"
		$File	"$SRCDIR\public\tier0\valve_on.h"
		$File	"$SRCDIR\public\tier0\vatoms.h"
		$File	"$SRCDIR\public\tier0\vprof.h"
		$File	"$SRCDIR\public\tier0\vtuneinterface.h"
		$File	"$SRCDIR\public\tier0\vprof_sn.h"
		$File	"$SRCDIR\public\tier0\vprof_telemetry.h"
		$File	"$SRCDIR\public\tier0\wchartypes.h"
		$File	"$SRCDIR\public\tier0\win32consoleio.h"
		$File	"$SRCDIR\public\tier0\xbox_codeline_defines.h"
		$File	"$SRCDIR\public\tier0\dynfunction.h"
	}

	$Folder	"DESKey" [$WIN32||$WIN64]
	{
		$File	"DESKey\ALGO.H"
		$File	"DESKey\ALGO32.LIB"
		$File	"DESKey\DK2WIN32.H"
		$File	"DESKey\DK2WIN32.LIB"
	}

	$Folder "Manifest Files" [$WINDOWS]
	{
		$File	"valveetwprovider.man"
		{
			$Configuration
			{
				$CustomBuildStep
				{
					$CommandLine	"mc.exe -um $(InputFilename) -z $(InputName)Events"
					$Description	"Compiling ETW manifest file"
					$Outputs		"$(InputName)Events.h;$(InputName)Events.rc"
				}
			}
		}
	}
}
